{
  "questions" : [ {
    "question" : "What do students often do to ensure that their software works?",
    "answers" : [ "Conduct extensive testing", "Pray that it works", "Consult experts", "Use advanced debugging tools" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What are the four basic activities in a software process?",
    "answers" : [ "Analysis, design, coding, testing", "Planning, design, implementation, maintenance", "Specification, design and implementation, validation, evolution", "Conceptualization, development, deployment, review" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "What is a common approach students take to meet project deadlines?",
    "answers" : [ "Start well in advance", "Work in pairs and rush towards the deadline", "Outsource part of the work", "Simplify the project scope" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What is one of the realities students face when their projects differ from real life?",
    "answers" : [ "Increased complexity", "Less time for debugging", "The need for more extensive research", "Changes in requirements and team dynamics" ],
    "correct_ans" : "4",
    "difficulty" : 3
  }, {
    "question" : "What was the aim of the 1968 NATO Conference mentioned in the slide?",
    "answers" : [ "To promote new programming languages", "To establish international software standards", "To solve the “Software Crisis”", "To initiate global software collaboration" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is a significant aspect of software engineering?",
    "answers" : [ "Focus on hardware compatibility", "Emphasis on mathematical foundations", "Concern with cost-effective software development", "Priority on user interface design" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is requirements engineering?",
    "answers" : [ "The process of developing software interfaces", "The process of testing and maintaining software systems", "The process of establishing the services required from a system and its constraints", "The process of software coding and implementation" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What are functional requirements in software engineering?",
    "answers" : [ "Descriptions of the system's hardware components", "Statements of services the system should provide and how it should behave", "Documentation of the software's user interface design", "The financial constraints under which the software must be developed" ],
    "correct_ans" : "2",
    "difficulty" : 1
  }, {
    "question" : "What problem arises from imprecise requirements?",
    "answers" : [ "Increased development time", "Reduced system security", "Ambiguous requirements leading to varied interpretations", "Overbudgeting of projects" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What is the main concern of requirements validation?",
    "answers" : [ "Ensuring the software is developed within budget", "Demonstrating that the requirements define what the customer wants", "Making sure the software is compatible with different platforms", "Confirming that the software meets performance metrics" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What is a purpose of prototyping in software development?",
    "answers" : [ "To finalize the software's user interface design", "To check the requirements using an executable model of the system", "To determine the final cost of the software project", "To train the end-users of the software" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What is the main objective of requirements management?",
    "answers" : [ "To ensure that software is delivered on time", "To keep track of changing requirements during development", "To maintain the software post-release", "To manage the software development team" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What distinguishes non-functional requirements from functional requirements?",
    "answers" : [ "Non-functional requirements are not essential for the system", "Non-functional requirements are constraints on services offered by the system", "Non-functional requirements are easier to test and validate", "Non-functional requirements are solely focused on system performance" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is the role of test-case generation in software development?",
    "answers" : [ "To design the software’s user interface", "To establish the project budget", "To develop tests for checking requirements testability", "To create a marketing strategy for the software" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is a critical task in requirements management?",
    "answers" : [ "Finalizing the software's release date", "Selecting the programming languages to be used", "Managing the changes in requirements during development", "Deciding on the software's pricing strategy" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What are the two stages in the project life cycle?",
    "answers" : [ "Planning and Execution", "Analysis and Design", "Development and Operation/Maintenance", "Initialization and Completion" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "Is there a specific testing phase in software production?",
    "answers" : [ "Yes, after the development phase", "No, testing is performed throughout software production", "Yes, before the maintenance phase", "No, testing is only done at the end" ],
    "correct_ans" : "2",
    "difficulty" : 1
  }, {
    "question" : "What is the focus during the Requirements Phase?",
    "answers" : [ "Determining the client's budget", "Deciding on the software’s features", "Determining what the client needs, not what they want", "Creating a preliminary design of the software" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What should the specifications document not include?",
    "answers" : [ "Precise descriptions", "Ambiguous statements", "Detailed technical information", "Clear objectives" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What is the focus during the Design Phase?",
    "answers" : [ "Deciding on the marketing strategy", "Implementing the code", "Decomposing the product into modules", "Finalizing the software’s features" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "What activities are involved in the Implementation Phase?",
    "answers" : [ "Market analysis and client feedback", "Implementing the detailed design in code and testing", "Finalizing the project budget", "Designing the user interface" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What is the main task during the Integration Phase?",
    "answers" : [ "Writing the user manual", "Combining modules and checking the product as a whole", "Conducting market research", "Implementing feedback from beta testing" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is the primary concern during the Maintenance Phase?",
    "answers" : [ "Designing new features", "Managing changes after the client has accepted the software", "Developing marketing strategies", "Training users on the software" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What are the different types of reviews in software development?",
    "answers" : [ "User reviews, client reviews, and team reviews", "Inspections for defect removal, reviews for progress assessment, and quality reviews", "Initial reviews, mid-reviews, and final reviews", "Design reviews, code reviews, and testing reviews" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is system modeling?",
    "answers" : [ "The process of developing abstract models of a system, each presenting a different view or perspective", "The process of creating physical prototypes for each system component", "The process of coding and implementing software systems", "The process of marketing and selling software systems" ],
    "correct_ans" : "1",
    "difficulty" : 1
  }, {
    "question" : "What do activity diagrams in UML represent?",
    "answers" : [ "The interactions between a system and its environment", "The sequence of interactions between actors and the system", "The activities involved in a process or in data processing", "The object classes in the system and their associations" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What do context models illustrate?",
    "answers" : [ "The detailed design of system components", "The operational context of a system, showing what lies outside its boundaries", "The dynamic behavior of the system", "The sequence of interactions in a particular use case" ],
    "correct_ans" : "2",
    "difficulty" : 1
  }, {
    "question" : "How do Perry and Wolf define software architecture?",
    "answers" : [ "As a set of elements, form, and rationale", "Solely based on the software's functionality", "As the programming code structure", "Based on the software's cost" ],
    "correct_ans" : "1",
    "difficulty" : 2
  }, {
    "question" : "What is an architectural pattern?",
    "answers" : [ "A fixed set of design rules that cannot be altered", "A specific programming language structure", "A set of design decisions applicable to recurring design problems", "A blueprint for graphical user interfaces" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "What is a design pattern in software engineering?",
    "answers" : [ "A detailed software specification", "A common solution to a recurring problem in design", "A unique approach for each software system", "A method for cost estimation" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What does the client-server architecture involve?",
    "answers" : [ "A single server handling all tasks", "A system with no servers", "Clients accessing services from separate servers", "Only peer-to-peer interactions" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is the temporal aspect of software architecture?",
    "answers" : [ "The architecture remains constant over time", "The architecture changes over a system's lifetime", "The architecture is only relevant at the beginning of the system's life", "The architecture is decided after the system is built" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is the intent of the Singleton pattern in software design?",
    "answers" : [ "To ensure multiple instances of a class", "To ensure a class has one instance with global access", "To provide multiple access points to a class", "To allow unrestricted subclassing of a class" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is software architecture?",
    "answers" : [ "The set of principal design decisions about a system", "The programming language used for development", "The database technology chosen for the system", "The user interface layout" ],
    "correct_ans" : "1",
    "difficulty" : 1
  }, {
    "question" : "What is a common use of client-server architecture?",
    "answers" : [ "For systems that do not require a network", "For systems that do not involve data sharing", "For systems where data in a shared database has to be accessed from multiple locations", "For standalone desktop applications" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What does an architectural pattern describe?",
    "answers" : [ "A system organization that has been successful in previous systems", "The specific coding standards for a system", "The network infrastructure of a system", "The budget for the system's development" ],
    "correct_ans" : "1",
    "difficulty" : 1
  }, {
    "question" : "What is the definition of an architectural pattern?",
    "answers" : [ "A set of design decisions for a specific software problem", "A detailed blueprint of a software system", "A graphical representation of a software's user interface", "A coding guideline followed by developers" ],
    "correct_ans" : "1",
    "difficulty" : 2
  }, {
    "question" : "In which contexts is the three-tiered system pattern widely used?",
    "answers" : [ "Only in scientific applications", "In science, banking, e-commerce, and reservation systems", "Exclusively in reservation systems", "Primarily in gaming and entertainment software" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "Which of these is a characteristic of an architectural pattern?",
    "answers" : [ "It is always specific to a single type of software application", "It is parameterized to account for different software development contexts", "It provides detailed implementation instructions", "It is not reusable in different systems" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "Which statement best describes the Singleton pattern?",
    "answers" : [ "A pattern that ensures a class only has multiple instances", "A pattern that ensures a class only ever has one instance", "A pattern used for creating many instances of a class in a distributed system", "A pattern that disallows global access to a class" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is one of the known uses of the Singleton pattern?",
    "answers" : [ "It is mainly used in mobile applications", "It is primarily used in embedded systems", "It is used in Smalltalk-80's ChangeSet", "It is used exclusively in client-server architectures" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is a critical aspect of implementation in software engineering?",
    "answers" : [ "The choice of programming language", "Reuse of existing components or systems", "The color scheme of the user interface", "The speed of the development process" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What does integrating quality activities in the project life cycle include?",
    "answers" : [ "Only software development and deployment", "Only software testing and maintenance", "Reviews, software testing strategies, and implementation", "Exclusively user interface design" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What defines a correct software product?",
    "answers" : [ "A product that is user-friendly", "A product that is the fastest", "A product that satisfies its specifications", "A product that is the most cost-effective" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What are the subtopics of testing during the development life cycle?",
    "answers" : [ "Only user testing and release testing", "Quality assurance of hardware components", "Integrating quality activities, reviews, software testing strategies, and implementation", "Exclusively focusing on software coding practices" ],
    "correct_ans" : "3",
    "difficulty" : 1
  }, {
    "question" : "What is the primary objective of software testing?",
    "answers" : [ "To enhance the software's speed", "To make the software more user-friendly", "To identify and reveal as many errors as possible in the tested software", "To ensure the software is the cheapest to produce" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "What does white-box testing focus on?",
    "answers" : [ "Testing without knowledge of the software structure", "The software's marketing strategy", "The software structure to uncover erroneous outputs", "Only the graphical interface of the software" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "What is the difference between verification and validation in software testing?",
    "answers" : [ "Verification ensures the software is built right; validation ensures it does what the user requires", "Verification focuses on cost, validation on speed", "Verification is about user interface design, validation about system performance", "Verification is solely about coding, validation about marketing" ],
    "correct_ans" : "1",
    "difficulty" : 2
  }, {
    "question" : "What is black-box testing?",
    "answers" : [ "Testing with detailed knowledge of the software's internal workings", "Testing the software without knowledge of its internal structure", "Testing only the user interface components", "Testing based on the software's cost and time to market" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What are testing guidelines for sequences?",
    "answers" : [ "Test with sequences of only a single value and of different sizes", "Use the longest sequences possible", "Test with sequences that are consistent in size and value", "Avoid testing sequences with zero length" ],
    "correct_ans" : "1",
    "difficulty" : 3
  }, {
    "question" : "What is integration testing?",
    "answers" : [ "Testing after the software is fully developed and deployed", "Testing that focuses solely on the user interface", "Testing to uncover errors resulting from unit interfaces at the end of units development", "Testing only the software's speed and performance" ],
    "correct_ans" : "3",
    "difficulty" : 3
  }, {
    "question" : "What is McCabe cyclomatic complexity a measure of in white-box testing?",
    "answers" : [ "Program complexity", "User interface complexity", "Testing efficiency", "Software cost" ],
    "correct_ans" : "1",
    "difficulty" : 1
  }, {
    "question" : "In black-box testing, what is the primary focus?",
    "answers" : [ "The software's internal code structure", "The software as a 'black box' to uncover erroneous outputs", "The software's hardware requirements", "The cost of software development" ],
    "correct_ans" : "2",
    "difficulty" : 1
  }, {
    "question" : "In a black-box testing example for a taxi fare calculation, what does the minimal fare cover?",
    "answers" : [ "Up to 1000m and up to 3 minutes waiting time", "Only the first 500m regardless of time", "Any distance within 5 minutes", "Up to 2km and 5 minutes waiting time" ],
    "correct_ans" : "1",
    "difficulty" : 1
  }, {
    "question" : "What are the major components of software testing strategies?",
    "answers" : [ "Only black-box and white-box testing", "Only unit testing and system testing", "Behavioral and structural test strategies", "Efficiency and cost strategies" ],
    "correct_ans" : "3",
    "difficulty" : 2
  }, {
    "question" : "In black-box testing, which aspects of the software are represented as nodes in a graph?",
    "answers" : [ "The individual lines of code", "The software's marketing strategies", "The software's physical components", "Entities of the software system" ],
    "correct_ans" : "4",
    "difficulty" : 2
  }, {
    "question" : "In black-box testing, how do equivalence classes contribute?",
    "answers" : [ "By increasing the number of tests needed", "By reducing the number of tests while preserving test coverage", "By focusing solely on software costs", "By evaluating the software's user interface" ],
    "correct_ans" : "2",
    "difficulty" : 2
  }, {
    "question" : "What are the stages of software testing?",
    "answers" : [ "Initial, intermediate, final", "Development, integration, system", "Cost analysis, efficiency measurement, deployment", "Planning, execution, review" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is a significant challenge in black-box testing?",
    "answers" : [ "Deciding on the software's price", "Defining the graph of the software system", "Choosing the software's color scheme", "Determining the software's target audience" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "In black-box testing, what is an example of testing the taxi fare calculation?",
    "answers" : [ "Testing only during the day", "Testing with different numbers of suitcases and distances", "Testing only the software's graphical interface", "Testing only with regular clients" ],
    "correct_ans" : "2",
    "difficulty" : 3
  }, {
    "question" : "What is software????",
    "answers" : [ "A set of programming codes", "Computer programs and associated documentation", "Digital tools for solving problems", "Systems for managing hardware" ],
    "correct_ans" : "2",
    "difficulty" : 1
  } ]
}